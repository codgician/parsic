initSidebarItems({"fn":[["and","Combinator: `and` (function ver.)"],["bind","Combinator: `bind` (function ver.)"],["compose","Combinator: `compose` (function ver.)"],["empty","Combinator: `empty`"],["fix","Combinator: `fix`"],["lazy","Combinator: `lazy`"],["left","Combinator: `left` (function ver.)"],["many","Combinator: `many` (function ver.)"],["map","Combinator: `map` (function ver.)"],["map_option","Combinator: `map_option` (function ver.)"],["map_result","Combinator: `map_result` (function ver.)"],["mid","Combinator: `mid` (function ver.)"],["optional","Combinator: `optional` (function ver.)"],["or","Combinator: `or` (function ver.)"],["pure","Combinator: `pure`"],["right","Combinator: `right` (function ver.)"],["some","Combinator: `some` (function ver.)"]],"struct":[["Fix",""],["Lazy","Data structure for `lazy` combinator."]],"trait":[["BindExt","Implement `bind` combinator for `Parsable<S>`."],["ComposeExt","Implement `compose` combinator for `Parsable<S>`."],["LogExt","Implement error related combinators for `Parsable<S>`."],["MapExt","Implement `map` and related combinators for `Parsable`."],["OrExt","Implement `or` combinator for `Parsable<S>`."],["ReplicativeExt","Implement replicative combinators for `Parsable<S>`."],["SequentialExt","Implement sequential combinators for `Parsable<S>`."]]});